<?php
// $Id: fivestar_comment.module,v 1.1.2.1 2008/06/30 03:40:15 quicksketch Exp $

define('FIVESTAR_COMMENT_DISABLED', 0);
define('FIVESTAR_COMMENT_OPTIONAL', 1);
define('FIVESTAR_COMMENT_REQUIRED', 2);

/**
 * Form alter specification for comments.
 */
function fivestar_comment_form_alter(&$form, &$form_state, $form_id) {
  // Comment settings.
  if ($form_id == 'node_type_form' && isset($form['identity']['type'])) {
    $form['fivestar']['comment'] = array(
      '#type' => 'fieldset',
      '#title' => t('Comment widget'),
      '#description' => t('Enabling Fivestar for comments will display a rating widget when a user posts a comment. The rating of the comment will affect its parent content.'),
      '#weight' => 1,
    );
    $form['fivestar']['comment']['fivestar_comment'] = array(
      '#type' => 'radios',
      '#title' => t('Fivestar comment settings'),
      '#options' => array(
        FIVESTAR_COMMENT_DISABLED => t('Disabled'),
        FIVESTAR_COMMENT_OPTIONAL => t('Optional rating'),
        FIVESTAR_COMMENT_REQUIRED => t('Required rating'),
      ),
      '#default_value' => variable_get('fivestar_comment_'. $form['#node_type']->type, FIVESTAR_COMMENT_DISABLED),
    );
    $form['fivestar']['comment']['fivestar_comment_preview'] = array(
      '#type' => 'item',
      '#title' => t('Comment widget preview'),
      '#value' => theme('fivestar_preview', 'compact', 'none', $form['fivestar']['fivestar_stars']['#default_value'], $form['fivestar']['comment']['fivestar_comment']['#default_value'] == 1 ? 1 : 0),
    );
    if (!$form['fivestar']['fivestar']['#default_value'] || !$form['fivestar']['comment']['fivestar_comment']['#default_value']) {
      $form['fivestar']['comment']['fivestar_comment_preview']['#value'] = theme('fivestar_preview_wrapper', '', 'comment');
    }
    else {
      $form['fivestar']['comment']['fivestar_comment_preview']['#value'] = theme('fivestar_preview_wrapper', $form['fivestar']['comment']['fivestar_comment_preview']['#value'], 'comment');
    }
  }
 
  // Comment form. Do not allow ratings inside of threads.
  if ($form_id == 'comment_form' && empty($form['pid']['#value'])) {
    $node = node_load($form['nid']['#value']);
    if (variable_get('fivestar_comment_'. $node->type, FIVESTAR_COMMENT_DISABLED)) {
      // Splice in the fivestar right before the body.
      $new_form = array();
     $val = db_result(db_query('select count(*) from {category}'));
      foreach ($form as $key => $element) {
        if ($key == 'comment_filter') {
          if ($form['cid']['#value']) {
            $current_rating = fivestar_comment_load($form['cid']['#value'], $form['nid']['#value']);
            $default_value = $current_rating['value'];
          }
          else {
            $default_value = 0;
          }
          for($i=1;$i<=$val;$i++){
		  $new_form['fivestar_rating_'.$i] = array(
		    '#type' => 'fivestar',
		    '#title' => db_result(db_query('select category from {category} where category_id=%d',$i)),
		    '#stars' => variable_get('fivestar_stars_'. $node->type, 5),
		    '#allow_clear' => variable_get('fivestar_comment_'. $node->type, FIVESTAR_COMMENT_DISABLED) == FIVESTAR_COMMENT_OPTIONAL ? 1 : 0,
		    '#content_id' => $node->nid,
		    '#required' => variable_get('fivestar_comment_'. $node->type, FIVESTAR_COMMENT_DISABLED) == FIVESTAR_COMMENT_REQUIRED ? 1 : 0,
		    '#default_value' => $default_value,
		    '#labels' => variable_get('fivestar_labels_'. $node->type, array()),
		  );
          }
         
        }
        $new_form[$key] = $element;
      }
      $form = $new_form;
    }
  }
}

/**
 * Implementation of hook_comment().
 */
function fivestar_comment(&$comment, $op) {
  if (is_array($comment) && is_numeric($comment['nid'])) {
    $nid = $comment['nid'];
  }
  elseif (is_array($comment) && is_array($comment['nid']) && is_numeric($comment['nid']['#value'])) {
    $nid = $comment['nid']['#value'];
  }
  elseif (is_object($comment) && is_numeric($comment->nid)) {
    $nid = $comment->nid;
  }

  if (isset($nid)) {
    $node = node_load($nid);
    $fivestar_status = variable_get('fivestar_comment_'. $node->type, FIVESTAR_COMMENT_DISABLED);
  }

  switch ($op) {
    case 'view': 
   //  echo '<div class="field-label" style="border: 0px solid green; font-weight: bold; position: relative; top:1000px;">Fighting</div>';
      if ($fivestar_status != FIVESTAR_COMMENT_DISABLED) {
        $current_rating = fivestar_comment_load($comment->cid, $comment->nid);
        $categ=array();
	$cat_name=array();
	$cat_rat=array();
        $catdata=db_query('SELECT * FROM {category}');
		while($item=db_fetch_array($catdata)){
		     array_push($categ,$item['category']);	
		}
//	$user_name=db_query('SELECT name.t2 FROM comments t1 JOIN users t2 ON t2.uid = t1.uid   ');			
	$name = db_result(db_query('select name from users where uid=any(select uid from comments where cid='.$comment->cid.')'));
	$term=0;
	   	foreach($current_rating as $currentrt){
			   $comment->fivestar_rating = isset($currentrt['value']) ? $currentrt['value'] : NULL; 
			   $comment->fivestar_view = theme('fivestar_static', $comment->fivestar_rating, variable_get('fivestar_stars_'. $node->type, 5));
			if ($comment->fivestar_rating) {
				 array_push($cat_name,$categ[$term]);
				 array_push($cat_rat,$comment->fivestar_view);
			   $term++;
			 if($term%count($categ)==0)
			   $term=0;
			}
		}
		if($comment->comment){
	        $comment->comment = "<strong>".ucfirst($name)."</strong><table align='left'><tr><td><div style='width:350px;border:0px solid red;'>".$comment->comment."</div></td></tr></table><table border=0 style='float:right' cellspacing='5' cellpadding='5'>";

		for($i=0;$i<sizeof($cat_name);$i++){
			$comment->comment .= "<tr><td style='font-weight:bold;'>".$cat_name[$i].":"."</td><td><div style='position:relative;top:15px;'>".$cat_rat[$i]."</div></td></tr>";
		}
		$comment->comment .="</table>";
		}
     }
      break;
    case 'insert': 
      if ($fivestar_status != FIVESTAR_COMMENT_DISABLED) {
        
        $val1 = db_result(db_query('select count(*) from {category}'));
	for($i=1;$i<=$val1;$i++){
          	fivestar_comment_insert($comment['cid'], $comment['nid'], $comment['uid'], $comment['fivestar_rating_'.$i],$i);  
       }
        $comment = (array)$comment;
      }
      break;
      }
}

/**
 * Get a current rating for a comment.
 */
function fivestar_comment_load($cid, $nid, $reset = FALSE) {
  global $user;
  $cids = array();
  if (!isset($cids[$cid]) || $reset) {
	$dataset=db_query('SELECT * FROM {comments c,voting_comment v} WHERE c.cid = %d and c.cid=v.cid and c.comment!=""', $cid);
	while($item=db_fetch_array($dataset)){
	     array_push($cids,$item);	
	}
  }
  return $cids;
}


/**
 * Insert a fivestar comment value.
 */
function fivestar_comment_insert($cid, $nid, $uid, $value,$i) {
  db_query('INSERT INTO {voting_comment} VALUES (%d,%d,%d,%d)', '',$cid,$value,$i);
}

